/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { LocationSegments, MatchResults, RouterHistory } from "@stencil/router";
import { ButtonIconPosition } from "./components/buttons/button-icon/button-icon-position";
import { Player } from "./models/player";
import { Team } from "./models/teams";
import { Tournament } from "./models/tournament";
export namespace Components {
    interface AppHeader {
        "heading": String;
        "history": RouterHistory;
        "location": LocationSegments;
    }
    interface AppHome {
        "history": RouterHistory;
    }
    interface AppRoot {
    }
    interface AppTeams {
        "history": RouterHistory;
        "match": MatchResults;
    }
    interface AppTournament {
        "history": RouterHistory;
        "match": any;
    }
    interface ButtonIcon {
        "action": ((event: MouseEvent) => void) | null;
        "href": string | null;
        "icon": string | null;
        "iconPosition": ButtonIconPosition;
        "label": string | null;
        "placeholder": string | null;
    }
    interface PlayerRow {
        "data": {player: Player};
    }
    interface PlayersList {
        "data": {players: Player[]};
    }
    interface TeamForm {
        "data": {team: Team};
    }
    interface TeamRow {
        "data": { team: Team };
    }
    interface TeamsActionsBar {
    }
    interface TeamsList {
        "teams": Team[];
    }
    interface TournamentRow {
        "tournament": Tournament;
    }
    interface TournamentsList {
        "tournaments": Tournament[];
    }
}
declare global {
    interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {
    }
    var HTMLAppHeaderElement: {
        prototype: HTMLAppHeaderElement;
        new (): HTMLAppHeaderElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTeamsElement extends Components.AppTeams, HTMLStencilElement {
    }
    var HTMLAppTeamsElement: {
        prototype: HTMLAppTeamsElement;
        new (): HTMLAppTeamsElement;
    };
    interface HTMLAppTournamentElement extends Components.AppTournament, HTMLStencilElement {
    }
    var HTMLAppTournamentElement: {
        prototype: HTMLAppTournamentElement;
        new (): HTMLAppTournamentElement;
    };
    interface HTMLButtonIconElement extends Components.ButtonIcon, HTMLStencilElement {
    }
    var HTMLButtonIconElement: {
        prototype: HTMLButtonIconElement;
        new (): HTMLButtonIconElement;
    };
    interface HTMLPlayerRowElement extends Components.PlayerRow, HTMLStencilElement {
    }
    var HTMLPlayerRowElement: {
        prototype: HTMLPlayerRowElement;
        new (): HTMLPlayerRowElement;
    };
    interface HTMLPlayersListElement extends Components.PlayersList, HTMLStencilElement {
    }
    var HTMLPlayersListElement: {
        prototype: HTMLPlayersListElement;
        new (): HTMLPlayersListElement;
    };
    interface HTMLTeamFormElement extends Components.TeamForm, HTMLStencilElement {
    }
    var HTMLTeamFormElement: {
        prototype: HTMLTeamFormElement;
        new (): HTMLTeamFormElement;
    };
    interface HTMLTeamRowElement extends Components.TeamRow, HTMLStencilElement {
    }
    var HTMLTeamRowElement: {
        prototype: HTMLTeamRowElement;
        new (): HTMLTeamRowElement;
    };
    interface HTMLTeamsActionsBarElement extends Components.TeamsActionsBar, HTMLStencilElement {
    }
    var HTMLTeamsActionsBarElement: {
        prototype: HTMLTeamsActionsBarElement;
        new (): HTMLTeamsActionsBarElement;
    };
    interface HTMLTeamsListElement extends Components.TeamsList, HTMLStencilElement {
    }
    var HTMLTeamsListElement: {
        prototype: HTMLTeamsListElement;
        new (): HTMLTeamsListElement;
    };
    interface HTMLTournamentRowElement extends Components.TournamentRow, HTMLStencilElement {
    }
    var HTMLTournamentRowElement: {
        prototype: HTMLTournamentRowElement;
        new (): HTMLTournamentRowElement;
    };
    interface HTMLTournamentsListElement extends Components.TournamentsList, HTMLStencilElement {
    }
    var HTMLTournamentsListElement: {
        prototype: HTMLTournamentsListElement;
        new (): HTMLTournamentsListElement;
    };
    interface HTMLElementTagNameMap {
        "app-header": HTMLAppHeaderElement;
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "app-teams": HTMLAppTeamsElement;
        "app-tournament": HTMLAppTournamentElement;
        "button-icon": HTMLButtonIconElement;
        "player-row": HTMLPlayerRowElement;
        "players-list": HTMLPlayersListElement;
        "team-form": HTMLTeamFormElement;
        "team-row": HTMLTeamRowElement;
        "teams-actions-bar": HTMLTeamsActionsBarElement;
        "teams-list": HTMLTeamsListElement;
        "tournament-row": HTMLTournamentRowElement;
        "tournaments-list": HTMLTournamentsListElement;
    }
}
declare namespace LocalJSX {
    interface AppHeader {
        "heading"?: String;
        "history"?: RouterHistory;
        "location"?: LocationSegments;
    }
    interface AppHome {
        "history"?: RouterHistory;
    }
    interface AppRoot {
    }
    interface AppTeams {
        "history"?: RouterHistory;
        "match"?: MatchResults;
    }
    interface AppTournament {
        "history"?: RouterHistory;
        "match"?: any;
    }
    interface ButtonIcon {
        "action"?: ((event: MouseEvent) => void) | null;
        "href"?: string | null;
        "icon"?: string | null;
        "iconPosition"?: ButtonIconPosition;
        "label"?: string | null;
        "placeholder"?: string | null;
    }
    interface PlayerRow {
        "data"?: {player: Player};
        "onRemovePlayer"?: (event: CustomEvent<Player>) => void;
        "onUpdateTeam"?: (event: CustomEvent<void>) => void;
    }
    interface PlayersList {
        "data"?: {players: Player[]};
    }
    interface TeamForm {
        "data"?: {team: Team};
        "onUpdateTeam"?: (event: CustomEvent<void>) => void;
    }
    interface TeamRow {
        "data"?: { team: Team };
        "onRemoveTeam"?: (event: CustomEvent<Team>) => void;
        "onSelectTeam"?: (event: CustomEvent<Team>) => void;
    }
    interface TeamsActionsBar {
        "onCreateTeam"?: (event: CustomEvent<void>) => void;
    }
    interface TeamsList {
        "teams"?: Team[];
    }
    interface TournamentRow {
        "onRemoveTournament"?: (event: CustomEvent<Tournament>) => void;
        "tournament"?: Tournament;
    }
    interface TournamentsList {
        "tournaments"?: Tournament[];
    }
    interface IntrinsicElements {
        "app-header": AppHeader;
        "app-home": AppHome;
        "app-root": AppRoot;
        "app-teams": AppTeams;
        "app-tournament": AppTournament;
        "button-icon": ButtonIcon;
        "player-row": PlayerRow;
        "players-list": PlayersList;
        "team-form": TeamForm;
        "team-row": TeamRow;
        "teams-actions-bar": TeamsActionsBar;
        "teams-list": TeamsList;
        "tournament-row": TournamentRow;
        "tournaments-list": TournamentsList;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-header": LocalJSX.AppHeader & JSXBase.HTMLAttributes<HTMLAppHeaderElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-teams": LocalJSX.AppTeams & JSXBase.HTMLAttributes<HTMLAppTeamsElement>;
            "app-tournament": LocalJSX.AppTournament & JSXBase.HTMLAttributes<HTMLAppTournamentElement>;
            "button-icon": LocalJSX.ButtonIcon & JSXBase.HTMLAttributes<HTMLButtonIconElement>;
            "player-row": LocalJSX.PlayerRow & JSXBase.HTMLAttributes<HTMLPlayerRowElement>;
            "players-list": LocalJSX.PlayersList & JSXBase.HTMLAttributes<HTMLPlayersListElement>;
            "team-form": LocalJSX.TeamForm & JSXBase.HTMLAttributes<HTMLTeamFormElement>;
            "team-row": LocalJSX.TeamRow & JSXBase.HTMLAttributes<HTMLTeamRowElement>;
            "teams-actions-bar": LocalJSX.TeamsActionsBar & JSXBase.HTMLAttributes<HTMLTeamsActionsBarElement>;
            "teams-list": LocalJSX.TeamsList & JSXBase.HTMLAttributes<HTMLTeamsListElement>;
            "tournament-row": LocalJSX.TournamentRow & JSXBase.HTMLAttributes<HTMLTournamentRowElement>;
            "tournaments-list": LocalJSX.TournamentsList & JSXBase.HTMLAttributes<HTMLTournamentsListElement>;
        }
    }
}
